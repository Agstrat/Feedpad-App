import { jsPDF } from 'jspdf';

export function downloadJSON(filename: string, data: unknown) {
  const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
  const a = document.createElement('a');
  a.href = URL.createObjectURL(blob);
  a.download = filename;
  a.click();
  URL.revokeObjectURL(a.href);
}

export function downloadPDF(filename: string, summary: {
  projectName?: string;
  inputs: Record<string, any>;
  outputs: Record<string, any>;
  timestamp: string;
  notes?: string;
}) {
  const doc = new jsPDF();
  doc.setFontSize(14);
  doc.text(summary.projectName || 'FeedPad Summary', 14, 18);
  doc.setFontSize(10);
  doc.text(`Timestamp: ${summary.timestamp}`, 14, 26);

  let y = 36;
  doc.setFont(undefined, 'bold'); doc.text('Inputs', 14, y); doc.setFont(undefined, 'normal'); y += 6;
  Object.entries(summary.inputs).forEach(([k, v]) => {
    doc.text(`${k}: ${v}`, 14, y); y += 5;
  });

  y += 4;
  doc.setFont(undefined, 'bold'); doc.text('Outputs', 14, y); doc.setFont(undefined, 'normal'); y += 6;
  Object.entries(summary.outputs).forEach(([k, v]) => {
    doc.text(`${k}: ${v}`, 14, y); y += 5;
  });

  if (summary.notes) { y += 6; doc.setFont(undefined, 'bold'); doc.text('Notes', 14, y); doc.setFont(undefined, 'normal'); y += 6; doc.text(summary.notes, 14, y); }
  doc.save(filename);
}
